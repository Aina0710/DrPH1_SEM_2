---
title: "Ordinal Outcomes"
format:
  html:
    theme: sketchy
    fontsize: 1.1em
    linestretch: 1.5
    toc: true
    toc-location: left-body
    toc-depth: 2
    number-sections: true
    number-depth: 3
---
<img src="members.png" style="border-radius: 15px; display: block; margin: auto;" width="400px" />

# Introduction
Ordinal logistic regression is a statistical modeling technique used to analyze data with an ordinal outcome variable, where the categories have a natural ordering (such as "low", "medium", and "high"). Unlike nominal logistic regression, which is designed for unordered categories, ordinal logistic regression accounts for the ordered nature of the dependent variable and estimates the odds of an observation falling at or below each category based on one or more independent variables. It is particularly useful in studies examining attitudes, perceptions, or clinical outcomes with graded severity, and it provides insights into how predictor variables influence the likelihood of moving up or down the ordinal scale.

# Load packages
## General packages
```{r}
library(tidyverse)
library(broom)
library(gtsummary)
library(broom)
library(kableExtra)
library(haven)
```

# About the dataset
This dataset derived from a health or metabolic syndrome screening study. It includes anthropometric, biochemical, and lifestyle variables. The primary outcome of interest for your analysis is fasting blood sugar (fbs).
The dataset consist of the following variables;

- codesub: Participant code or ID.
- age: Age in years (numeric).
- hpt: Hypertension status — “yes” or “no”.
- smoking: Smoking status — e.g., “never smoked”, “still smoking”.
- dmdx: Diabetes diagnosis — “yes” or “no”.
- height: Height in meters (numeric).
- weight: Weight in kilograms (numeric).
- waist: Waist circumference in centimeters (numeric).
- hip: Hip circumference in centimeters (numeric).
- msbpr: Measured systolic blood pressure (numeric).
- mdbpr: Measured diastolic blood pressure (numeric).
- hba1c: Hemoglobin A1c (%) (numeric).
- fbs: Fasting blood sugar in mmol/L — this is the outcome variable.
- mogtt1h: Blood glucose level at 1 hour during OGTT (Oral Glucose Tolerance Test) (mmol/L).
- mogtt2h: Blood glucose level at 2 hours during OGTT (mmol/L).
- totchol: Total cholesterol (mmol/L).
- ftrigliz: Fasting triglycerides (mmol/L).
- hdl: High-density lipoprotein cholesterol (mmol/L).
- ldl: Low-density lipoprotein cholesterol (mmol/L).
- gender: Gender — “male” or “female”.
- crural: Locality — “rural” or possibly “urban”.

# Load the dataset
```{r}
datao<- read_csv("datamssm_a.csv")
glimpse(datao)
```
# Data wrangling
Change character variable to factor
```{r}
datao<- datao %>% mutate_if(is.character, ~as_factor(.))
glimpse(datao)
```
# Exploratory Data Analysis
```{r}
summary(datao)
```
There are several data missing in the variable. Hence, we need to handle these missing data prior to continuing with analysis.

## Handling missing data
In this practice, we remove any row with missing data. 
```{r}
clean_datao <- na.omit(datao)
summary(clean_datao)
```

```{r}
glimpse(clean_datao)
```

```{r}
clean_datao %>% select(-codesub) %>% 
  tbl_summary(statistic = list(all_continuous() ~ "{mean} ({sd})")) %>%
  modify_caption("**Table 1: Characteristic of Participant**")
```

## Categorize fbs into 3 levels
```{r}
# Categorize FBS based on Malaysian clinical cut-offs into ordinal
clean_datao <- clean_datao %>%
  mutate(cat_fbs = case_when(
    fbs < 5.6 ~ "Low",
    fbs >= 5.6 & fbs <= 6.9 ~ "Moderate",
    TRUE ~ "High")) %>%
  mutate(cat_fbs = factor(cat_fbs, levels = c("Low", "Moderate", "High")))
#check cat_fbs
glimpse(clean_datao$cat_fbs)
levels(clean_datao$cat_fbs)
```
# Analysis by estimation 
## Using ordinal package
```{r}
library(ordinal)
```

Now, we will estimate the model using the proportional odds model or cumulative link model.
In ordinal package, we can use the function clm() to run the maximum likelihood estimates
In this assignment, we will use the following independent variable:
- gender (female and male)
- hypertension (yes and no)

```{r}
ord1 <- clm(cat_fbs ~ gender + hpt, data = clean_datao)
summary(ord1)
```
```{r}
tidy(ord1)
```

```{r}
tidy(ord1, exponentiate = TRUE)
```

1. Being a male associated with higher categories of FBS level. Males have 1.20 times higher odds of being in a higher outcome category compared to females

2. Absence of hypertension associated with lower categories of FBS level. Those without hypertension have 0.44 times the odds (i.e., 56% lower odds) of being in a higher outcome category compared to those with hypertension.

##Using MASS package
```{r}
library(MASS)
```

```{r}
ord2 <- MASS::polr(cat_fbs ~ gender + hpt, data = clean_datao)
summary(ord2)

```
By using both ordinal and MASS package, the estimates value are the same

# Inferences
##Using ordinal package
```{r}
tidy(ord1, exponentiate = TRUE, conf.int = TRUE)
```
Interpretation:

1. Being male (compared to female) is significantly associated with higher odds of being in a higher category of the ordinal outcome. Specifically, males have approximately 1.20 times higher odds (95% CI: 1.04–1.40, p = 0.015) of being in a higher outcome category.

2. Not having hypertension (compared to having hypertension) is significantly associated with lower odds of being in a higher outcome category. Specifically, those without hypertension have 0.44 times the odds (95% CI: 0.35–0.55, p < 0.001) of being in a higher category compared to those with hypertension, indicating a 56% reduction in the odds of being in a higher outcome category.

# Prediction

##Using ordinal package
```{r}
new.datao <- clean_datao %>% select(-cat_fbs)  # if dataset is clean_datao and column exists
predfbs <- predict(ord1, newdata = new.datao)
head(predfbs$fit)
```
For the first observation, there is:
- A 55% probability of being in the Low category.
- A 30% probability of being in the Moderate category.
- A 15% probability of being in the High category.

```{r}
classfbs <- predict(ord1, type = 'class')
head(classfbs$fit,20)
```

-All 20 observations were predicted to be in the “Low” category.
-No observations were predicted to be in the Moderate or High categories.

##Using MASS package
```{r}
prob_polr <- predict(ord2, type = 'probs')
head(prob_polr)
```
For the first observation, there is:
- A 55% probability of being in the Low category.
- A 30% probability of being in the Moderate category.
- A 15% probability of being in the High category.


